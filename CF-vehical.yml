AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for creating an Application Load Balancer and Auto Scaling Group

Parameters:
  KeyName:
    Description: Name of an existing EC2 key pair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: vehical-launchtemp
      LaunchTemplateData:
        ImageId: ami-0705384c0b33c194c  # Update this with the appropriate Ubuntu AMI ID for your region
        InstanceType: t3.micro
        KeyName: !Ref KeyName
        SecurityGroupIds: 
          - !GetAtt InstanceSecurityGroup.GroupId  # Reference the security group ID directly
        UserData: !Base64 |
          #!/bin/bash
          sudo apt update -y
          sudo apt install -y openjdk-8-jdk openjdk-17-jre-headless openjdk-17-jdk-headless unzip
          sudo apt install ruby-full -y
          sudo apt install wget
          cd /home/ubuntu
          wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.zip
          wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install
          chmod +x install
          unzip /home/ubuntu/apache-tomcat-9.0.71.zip -d /home/ubuntu/
          sudo chmod o+w /home/ubuntu/apache-tomcat-9.0.71/webapps/
          sudo ./install auto
        IamInstanceProfile:
          Arn: arn:aws:iam::730335275655:instance-profile/EC2RoleforCodeDeployFood

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: vehical-tgtgrp
      TargetType: instance
      Protocol: HTTP
      Port: 8080
      VpcId: vpc-0aeb6fac65a3f24e6

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: vehical-alb
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets:
        - subnet-0b96659e65b4ea16f
        - subnet-0f8eb8fa6b955c624
        - subnet-06fbf093927932b28
      SecurityGroups:
        - sg-0abf752d072ce37fb
        - !GetAtt InstanceSecurityGroup.GroupId  # Reference the security group ID directly

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: vehical-asg
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - subnet-0b96659e65b4ea16f
        - subnet-0f8eb8fa6b955c624
        - subnet-06fbf093927932b28
      TargetGroupARNs:
        - !Ref TargetGroup
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      DesiredCapacity: 2
      MinSize: 1
      MaxSize: 3

  # PUCApp:
  #   Type: AWS::CodeDeploy::Application
  #   Properties:
  #     ApplicationName: PUC-appDeploy
  #     ComputePlatform: Server

  # PUCDeploymentGroup:
  #   Type: AWS::CodeDeploy::DeploymentGroup
  #   Properties:
  #     ApplicationName: !Ref PUCApp
  #     DeploymentGroupName: PUC-deploygrp
  #     ServiceRoleArn: arn:aws:iam::523166455378:role/CodeDeployPucProjectRole
  #     DeploymentConfigName: CodeDeployDefault.AllAtOnce
  #     AutoScalingGroups:
  #       - !Ref AutoScalingGroup
  #     LoadBalancerInfo:
  #       TargetGroupInfoList:
  #         - Name: !Ref TargetGroup

  # PUCDeployment:
  #   Type: AWS::CodeDeploy::Deployment
  #   Properties:
  #     ApplicationName: !Ref PUCApp
  #     DeploymentGroupName: !Ref PUCDeploymentGroup
  #     Revision:
  #       RevisionType: S3
  #       S3Location:
  #         Bucket: my-bucket-mrinal
  #         BundleType: zip
  #         Key: Target

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the load balancer
    Value: !GetAtt LoadBalancer.DNSName
